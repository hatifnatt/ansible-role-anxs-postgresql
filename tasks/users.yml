# file: postgresql/tasks/users.yml

- name: PostgreSQL | Ensure PostgreSQL is running
  service:
    name: "{{ postgresql_service_name }}"
    state: started

- name: PostgreSQL | Make sure the PostgreSQL users are present
  postgresql_user:
    name: "{{item.name}}"
    password: "{{ item.pass | default(omit) }}"
    encrypted: "{{ item.encrypted | default(omit) }}"
    port: "{{postgresql_port}}"
    state: "{{ item.state | default('present') }}"
    login_user: "{{postgresql_admin_user}}"
  no_log: "{{ postgresql_hide_passwords }}"
  become: yes
  become_user: "{{postgresql_admin_user}}"
  with_items: "{{postgresql_users}}"
  when: postgresql_users|length > 0

- name: PostgreSQL | Add PostgreSQL user to the groups
  community.postgresql.postgresql_membership:
    db: "{{ item.db | default(omit) }}"
    groups: "{{ item.groups }}"
    target_role: "{{ item.name | default(omit) }}"
    state: "{{ item.groups_state | default('exact') }}"
    fail_on_role: "{{ item.fail_on_role | default(false) }}"
    port: "{{ postgresql_port }}"
    login_user: "{{ postgresql_admin_user }}"
    login_host: "{{ item.host | default(omit) }}"
  no_log: "{{ postgresql_hide_passwords }}"
  become: true
  become_user: "{{ postgresql_admin_user }}"
  with_items: "{{ postgresql_users }}"
  when:
    - postgresql_users | length > 0
    - item.get('groups', '')
