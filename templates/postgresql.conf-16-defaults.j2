#jinja2: trim_blocks:False
{#- Use defaults (usually commented out lines) from original postgresql config file when variable not defined or empty -#}
# -----------------------------
# PostgreSQL configuration file
# -----------------------------
#
# This file consists of lines of the form:
#
#   name = value
#
# (The "=" is optional.)  Whitespace may be used.  Comments are introduced with
# "#" anywhere on a line.  The complete list of parameter names and allowed
# values can be found in the PostgreSQL documentation.
#
# The commented-out settings shown in this file represent the default values.
# Re-commenting a setting is NOT sufficient to revert it to the default value;
# you need to reload the server.
#
# This file is read on server startup and when the server receives a SIGHUP
# signal.  If you edit the file on a running system, you have to SIGHUP the
# server for the changes to take effect, run "pg_ctl reload", or execute
# "SELECT pg_reload_conf()".  Some parameters, which are marked below,
# require a server shutdown and restart to take effect.
#
# Any parameter can also be given as a command-line option to the server, e.g.,
# "postgres -c log_connections=on".  Some parameters can be changed at run time
# with the "SET" SQL command.
#
# Memory units:  B  = bytes            Time units:  us  = microseconds
#                kB = kilobytes                     ms  = milliseconds
#                MB = megabytes                     s   = seconds
#                GB = gigabytes                     min = minutes
#                TB = terabytes                     h   = hours
#                                                   d   = days


#------------------------------------------------------------------------------
# FILE LOCATIONS
#------------------------------------------------------------------------------

# The default values of these variables are driven from the -D command-line
# option or PGDATA environment variable, represented here as ConfigDir.

{% if postgresql_data_directory is defined and postgresql_data_directory %}data_directory = '{{ postgresql_data_directory }}'{% else %}#data_directory = 'ConfigDir'{% endif %}		# use data in another directory
					# (change requires restart)
{% if postgresql_hba_file is defined and postgresql_hba_file %}hba_file = '{{ postgresql_hba_file }}'{% else %}#hba_file = 'ConfigDir/pg_hba.conf'{% endif %}	# host-based authentication file
					# (change requires restart)
{% if postgresql_ident_file is defined and postgresql_ident_file %}ident_file = '{{ postgresql_ident_file }}'{% else %}#ident_file = 'ConfigDir/pg_ident.conf'{% endif %}	# ident configuration file
					# (change requires restart)

# If external_pid_file is not explicitly set, no extra PID file is written.
{% if postgresql_external_pid_file is defined and postgresql_external_pid_file %}external_pid_file = '{{ postgresql_external_pid_file }}'{% else %}#external_pid_file = ''{% endif %}			# write an extra PID file
					# (change requires restart)


#------------------------------------------------------------------------------
# CONNECTIONS AND AUTHENTICATION
#------------------------------------------------------------------------------

# - Connection Settings -

{% if postgresql_listen_addresses is defined and postgresql_listen_addresses %}listen_addresses = '{{ postgresql_listen_addresses | join(', ') }}'{% else %}#listen_addresses = 'localhost'{% endif %}		# what IP address(es) to listen on;
					# comma-separated list of addresses;
					# defaults to 'localhost'; use '*' for all
					# (change requires restart)
{% if postgresql_port is defined and postgresql_port %}port = {{ postgresql_port }}{% else %}#port = 5432{% endif %}				# (change requires restart)
{% if postgresql_max_connections is defined and postgresql_max_connections %}max_connections = {{ postgresql_max_connections }}{% else %}#max_connections = 100{% endif %}			# (change requires restart)
{% if postgresql_reserved_connections is defined and postgresql_reserved_connections %}reserved_connections = {{ postgresql_reserved_connections }}{% else %}#reserved_connections = 0{% endif %}		# (change requires restart)
{% if postgresql_superuser_reserved_connections is defined and postgresql_superuser_reserved_connections %}superuser_reserved_connections = {{ postgresql_superuser_reserved_connections }}{% else %}#superuser_reserved_connections = 3{% endif %}	# (change requires restart)
{% if postgresql_unix_socket_directories is defined and postgresql_unix_socket_directories %}unix_socket_directories = '{{ postgresql_unix_socket_directories | join(', ') }}'{% else %}#unix_socket_directories = '/tmp'{% endif %}	# comma-separated list of directories
					# (change requires restart)
{% if postgresql_unix_socket_group is defined and postgresql_unix_socket_group %}unix_socket_group = '{{ postgresql_unix_socket_group }}'{% else %}#unix_socket_group = ''{% endif %}			# (change requires restart)
{% if postgresql_unix_socket_permissions is defined and postgresql_unix_socket_permissions %}unix_socket_permissions = {{ postgresql_unix_socket_permissions }}{% else %}#unix_socket_permissions = 0777{% endif %}		# begin with 0 to use octal notation
					# (change requires restart)
{% if postgresql_bonjour is defined and postgresql_bonjour %}bonjour = {{ postgresql_bonjour }}{% else %}#bonjour = off{% endif %}				# advertise server via Bonjour
					# (change requires restart)
{% if postgresql_bonjour_name is defined and postgresql_bonjour_name %}bonjour_name = '{{ postgresql_bonjour_name }}'{% else %}#bonjour_name = ''{% endif %}			# defaults to the computer name
					# (change requires restart)

# - TCP settings -
# see "man tcp" for details

{% if postgresql_tcp_keepalives_idle is defined and postgresql_tcp_keepalives_idle %}tcp_keepalives_idle = {{ postgresql_tcp_keepalives_idle }}{% else %}#tcp_keepalives_idle = 0{% endif %}		# TCP_KEEPIDLE, in seconds;
					# 0 selects the system default
{% if postgresql_tcp_keepalives_interval is defined and postgresql_tcp_keepalives_interval %}tcp_keepalives_interval = {{ postgresql_tcp_keepalives_interval }}{% else %}#tcp_keepalives_interval = 0{% endif %}		# TCP_KEEPINTVL, in seconds;
					# 0 selects the system default
{% if postgresql_tcp_keepalives_count is defined and postgresql_tcp_keepalives_count %}tcp_keepalives_count = {{ postgresql_tcp_keepalives_count }}{% else %}#tcp_keepalives_count = 0{% endif %}		# TCP_KEEPCNT;
					# 0 selects the system default
{% if postgresql_tcp_user_timeout is defined and postgresql_tcp_user_timeout %}tcp_user_timeout = {{ postgresql_tcp_user_timeout }}{% else %}#tcp_user_timeout = 0{% endif %}			# TCP_USER_TIMEOUT, in milliseconds;
					# 0 selects the system default

{% if postgresql_client_connection_check_interval is defined and postgresql_client_connection_check_interval %}client_connection_check_interval = {{ postgresql_client_connection_check_interval }}{% else %}#client_connection_check_interval = 0{% endif %}	# time between checks for client
					# disconnection while running queries;
					# 0 for never

# - Authentication -

{% if postgresql_authentication_timeout is defined and postgresql_authentication_timeout %}authentication_timeout = {{ postgresql_authentication_timeout }}{% else %}#authentication_timeout = 1min{% endif %}		# 1s-600s
{% if postgresql_password_encryption is defined and postgresql_password_encryption %}password_encryption = {{ postgresql_password_encryption }}{% else %}#password_encryption = scram-sha-256{% endif %}	# scram-sha-256 or md5
{% if postgresql_scram_iterations is defined and postgresql_scram_iterations %}scram_iterations = {{ postgresql_scram_iterations }}{% else %}#scram_iterations = 4096{% endif %}
{% if postgresql_db_user_namespace is defined and postgresql_db_user_namespace %}db_user_namespace = {{ postgresql_db_user_namespace }}{% else %}#db_user_namespace = off{% endif %}

# GSSAPI using Kerberos
{% if postgresql_krb_server_keyfile is defined and postgresql_krb_server_keyfile %}krb_server_keyfile = '{{ postgresql_krb_server_keyfile }}'{% else %}#krb_server_keyfile = 'FILE:${sysconfdir}/krb5.keytab'{% endif %}
{% if postgresql_krb_caseins_users is defined and postgresql_krb_caseins_users %}krb_caseins_users = {{ postgresql_krb_caseins_users }}{% else %}#krb_caseins_users = off{% endif %}
{% if postgresql_gss_accept_delegation is defined and postgresql_gss_accept_delegation %}gss_accept_delegation = {{ postgresql_gss_accept_delegation }}{% else %}#gss_accept_delegation = off{% endif %}

# - SSL -

{% if postgresql_ssl is defined and postgresql_ssl %}ssl = {{ postgresql_ssl }}{% else %}#ssl = off{% endif %}
{% if postgresql_ssl_ca_file is defined and postgresql_ssl_ca_file %}ssl_ca_file = '{{ postgresql_ssl_ca_file }}'{% else %}#ssl_ca_file = ''{% endif %}
{% if postgresql_ssl_cert_file is defined and postgresql_ssl_cert_file %}ssl_cert_file = '{{ postgresql_ssl_cert_file }}'{% else %}#ssl_cert_file = 'server.crt'{% endif %}
{% if postgresql_ssl_crl_file is defined and postgresql_ssl_crl_file %}ssl_crl_file = '{{ postgresql_ssl_crl_file }}'{% else %}#ssl_crl_file = ''{% endif %}
{% if postgresql_ssl_crl_dir is defined and postgresql_ssl_crl_dir %}ssl_crl_dir = '{{ postgresql_ssl_crl_dir }}'{% else %}#ssl_crl_dir = ''{% endif %}
{% if postgresql_ssl_key_file is defined and postgresql_ssl_key_file %}ssl_key_file = '{{ postgresql_ssl_key_file }}'{% else %}#ssl_key_file = 'server.key'{% endif %}
{% if postgresql_ssl_ciphers is defined and postgresql_ssl_ciphers %}ssl_ciphers = '{{ postgresql_ssl_ciphers | join(':') }}'{% else %}#ssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL'{% endif %} # allowed SSL ciphers
{% if postgresql_ssl_prefer_server_ciphers is defined and postgresql_ssl_prefer_server_ciphers %}ssl_prefer_server_ciphers = {{ postgresql_ssl_prefer_server_ciphers }}{% else %}#ssl_prefer_server_ciphers = on{% endif %}
{% if postgresql_ssl_ecdh_curve is defined and postgresql_ssl_ecdh_curve %}ssl_ecdh_curve = '{{ postgresql_ssl_ecdh_curve }}'{% else %}#ssl_ecdh_curve = 'prime256v1'{% endif %}
{% if postgresql_ssl_min_protocol_version is defined and postgresql_ssl_min_protocol_version %}ssl_min_protocol_version = '{{ postgresql_ssl_min_protocol_version }}'{% else %}#ssl_min_protocol_version = 'TLSv1.2'{% endif %}
{% if postgresql_ssl_max_protocol_version is defined and postgresql_ssl_max_protocol_version %}ssl_max_protocol_version = '{{ postgresql_ssl_max_protocol_version }}'{% else %}#ssl_max_protocol_version = ''{% endif %}
{% if postgresql_ssl_dh_params_file is defined and postgresql_ssl_dh_params_file %}ssl_dh_params_file = '{{ postgresql_ssl_dh_params_file }}'{% else %}#ssl_dh_params_file = ''{% endif %}
{% if postgresql_ssl_passphrase_command is defined and postgresql_ssl_passphrase_command %}ssl_passphrase_command = '{{ postgresql_ssl_passphrase_command }}'{% else %}#ssl_passphrase_command = ''{% endif %}
{% if postgresql_ssl_passphrase_command_supports_reload is defined and postgresql_ssl_passphrase_command_supports_reload %}ssl_passphrase_command_supports_reload = {{ postgresql_ssl_passphrase_command_supports_reload }}{% else %}#ssl_passphrase_command_supports_reload = off{% endif %}


#------------------------------------------------------------------------------
# RESOURCE USAGE (except WAL)
#------------------------------------------------------------------------------

# - Memory -

{% if postgresql_shared_buffers is defined and postgresql_shared_buffers %}shared_buffers = {{ postgresql_shared_buffers }}{% else %}#shared_buffers = 128MB{% endif %}			# min 128kB
					# (change requires restart)
{% if postgresql_huge_pages is defined and postgresql_huge_pages %}huge_pages = {{ postgresql_huge_pages }}{% else %}#huge_pages = try{% endif %}			# on, off, or try
					# (change requires restart)
{% if postgresql_huge_page_size is defined and postgresql_huge_page_size %}huge_page_size = {{ postgresql_huge_page_size }}{% else %}#huge_page_size = 0{% endif %}			# zero for system default
					# (change requires restart)
{% if postgresql_temp_buffers is defined and postgresql_temp_buffers %}temp_buffers = {{ postgresql_temp_buffers }}{% else %}#temp_buffers = 8MB{% endif %}			# min 800kB
{% if postgresql_max_prepared_transactions is defined and postgresql_max_prepared_transactions %}max_prepared_transactions = {{ postgresql_max_prepared_transactions }}{% else %}#max_prepared_transactions = 0{% endif %}		# zero disables the feature
					# (change requires restart)
# Caution: it is not advisable to set max_prepared_transactions nonzero unless
# you actively intend to use prepared transactions.
{% if postgresql_work_mem is defined and postgresql_work_mem %}work_mem = {{ postgresql_work_mem }}{% else %}#work_mem = 4MB{% endif %}				# min 64kB
{% if postgresql_hash_mem_multiplier is defined and postgresql_hash_mem_multiplier %}hash_mem_multiplier = {{ postgresql_hash_mem_multiplier }}{% else %}#hash_mem_multiplier = 2.0{% endif %}		# 1-1000.0 multiplier on hash table work_mem
{% if postgresql_maintenance_work_mem is defined and postgresql_maintenance_work_mem %}maintenance_work_mem = {{ postgresql_maintenance_work_mem }}{% else %}#maintenance_work_mem = 64MB{% endif %}		# min 1MB
{% if postgresql_autovacuum_work_mem is defined and postgresql_autovacuum_work_mem %}autovacuum_work_mem = {{ postgresql_autovacuum_work_mem }}{% else %}#autovacuum_work_mem = -1{% endif %}		# min 1MB, or -1 to use maintenance_work_mem
{% if postgresql_logical_decoding_work_mem is defined and postgresql_logical_decoding_work_mem %}logical_decoding_work_mem = {{ postgresql_logical_decoding_work_mem }}{% else %}#logical_decoding_work_mem = 64MB{% endif %}	# min 64kB
{% if postgresql_max_stack_depth is defined and postgresql_max_stack_depth %}max_stack_depth = {{ postgresql_max_stack_depth }}{% else %}#max_stack_depth = 2MB{% endif %}			# min 100kB
{% if postgresql_shared_memory_type is defined and postgresql_shared_memory_type %}shared_memory_type = {{ postgresql_shared_memory_type }}{% else %}#shared_memory_type = mmap{% endif %}		# the default is the first option
					# supported by the operating system:
					#   mmap
					#   sysv
					#   windows
					# (change requires restart)
{% if postgresql_dynamic_shared_memory_type is defined and postgresql_dynamic_shared_memory_type %}dynamic_shared_memory_type = {{ postgresql_dynamic_shared_memory_type }}{% else %}#dynamic_shared_memory_type = posix{% endif %}	# the default is usually the first option
					# supported by the operating system:
					#   posix
					#   sysv
					#   windows
					#   mmap
					# (change requires restart)
{% if postgresql_min_dynamic_shared_memory is defined and postgresql_min_dynamic_shared_memory %}min_dynamic_shared_memory = {{ postgresql_min_dynamic_shared_memory }}{% else %}#min_dynamic_shared_memory = 0MB{% endif %}	# (change requires restart)
{% if postgresql_vacuum_buffer_usage_limit is defined and postgresql_vacuum_buffer_usage_limit %}vacuum_buffer_usage_limit = {{ postgresql_vacuum_buffer_usage_limit }}{% else %}#vacuum_buffer_usage_limit = 256kB{% endif %}	# size of vacuum and analyze buffer access strategy ring;
					# 0 to disable vacuum buffer access strategy;
					# range 128kB to 16GB

# - Disk -

{% if postgresql_temp_file_limit is defined and postgresql_temp_file_limit %}temp_file_limit = {{ postgresql_temp_file_limit }}{% else %}#temp_file_limit = -1{% endif %}			# limits per-process temp file space
					# in kilobytes, or -1 for no limit

# - Kernel Resources -

{% if postgresql_max_files_per_process is defined and postgresql_max_files_per_process %}max_files_per_process = {{ postgresql_max_files_per_process }}{% else %}#max_files_per_process = 1000{% endif %}		# min 64
					# (change requires restart)

# - Cost-Based Vacuum Delay -

{% if postgresql_vacuum_cost_delay is defined and postgresql_vacuum_cost_delay %}vacuum_cost_delay = {{ postgresql_vacuum_cost_delay }}{% else %}#vacuum_cost_delay = 0{% endif %}			# 0-100 milliseconds (0 disables)
{% if postgresql_vacuum_cost_page_hit is defined and postgresql_vacuum_cost_page_hit %}vacuum_cost_page_hit = {{ postgresql_vacuum_cost_page_hit }}{% else %}#vacuum_cost_page_hit = 1{% endif %}		# 0-10000 credits
{% if postgresql_vacuum_cost_page_miss is defined and postgresql_vacuum_cost_page_miss %}vacuum_cost_page_miss = {{ postgresql_vacuum_cost_page_miss }}{% else %}#vacuum_cost_page_miss = 2{% endif %}		# 0-10000 credits
{% if postgresql_vacuum_cost_page_dirty is defined and postgresql_vacuum_cost_page_dirty %}vacuum_cost_page_dirty = {{ postgresql_vacuum_cost_page_dirty }}{% else %}#vacuum_cost_page_dirty = 20{% endif %}		# 0-10000 credits
{% if postgresql_vacuum_cost_limit is defined and postgresql_vacuum_cost_limit %}vacuum_cost_limit = {{ postgresql_vacuum_cost_limit }}{% else %}#vacuum_cost_limit = 200{% endif %}		# 1-10000 credits

# - Background Writer -

{% if postgresql_bgwriter_delay is defined and postgresql_bgwriter_delay %}bgwriter_delay = {{ postgresql_bgwriter_delay }}{% else %}#bgwriter_delay = 200ms{% endif %}			# 10-10000ms between rounds
{% if postgresql_bgwriter_lru_maxpages is defined and postgresql_bgwriter_lru_maxpages %}bgwriter_lru_maxpages = {{ postgresql_bgwriter_lru_maxpages }}{% else %}#bgwriter_lru_maxpages = 100{% endif %}		# max buffers written/round, 0 disables
{% if postgresql_bgwriter_lru_multiplier is defined and postgresql_bgwriter_lru_multiplier %}bgwriter_lru_multiplier = {{ postgresql_bgwriter_lru_multiplier }}{% else %}#bgwriter_lru_multiplier = 2.0{% endif %}		# 0-10.0 multiplier on buffers scanned/round
{% if postgresql_bgwriter_flush_after is defined and postgresql_bgwriter_flush_after %}bgwriter_flush_after = {{ postgresql_bgwriter_flush_after }}{% else %}#bgwriter_flush_after = 0{% endif %}		# measured in pages, 0 disables

# - Asynchronous Behavior -

{% if postgresql_backend_flush_after is defined and postgresql_backend_flush_after %}backend_flush_after = {{ postgresql_backend_flush_after }}{% else %}#backend_flush_after = 0{% endif %}		# measured in pages, 0 disables
{% if postgresql_effective_io_concurrency is defined and postgresql_effective_io_concurrency %}effective_io_concurrency = {{ postgresql_effective_io_concurrency }}{% else %}#effective_io_concurrency = 1{% endif %}		# 1-1000; 0 disables prefetching
{% if postgresql_maintenance_io_concurrency is defined and postgresql_maintenance_io_concurrency %}maintenance_io_concurrency = {{ postgresql_maintenance_io_concurrency }}{% else %}#maintenance_io_concurrency = 10{% endif %}	# 1-1000; 0 disables prefetching
{% if postgresql_max_worker_processes is defined and postgresql_max_worker_processes %}max_worker_processes = {{ postgresql_max_worker_processes }}{% else %}#max_worker_processes = 8{% endif %}		# (change requires restart)
{% if postgresql_max_parallel_workers_per_gather is defined and postgresql_max_parallel_workers_per_gather %}max_parallel_workers_per_gather = {{ postgresql_max_parallel_workers_per_gather }}{% else %}#max_parallel_workers_per_gather = 2{% endif %}	# limited by max_parallel_workers
{% if postgresql_max_parallel_maintenance_workers is defined and postgresql_max_parallel_maintenance_workers %}max_parallel_maintenance_workers = {{ postgresql_max_parallel_maintenance_workers }}{% else %}#max_parallel_maintenance_workers = 2{% endif %}	# limited by max_parallel_workers
{% if postgresql_max_parallel_workers is defined and postgresql_max_parallel_workers %}max_parallel_workers = {{ postgresql_max_parallel_workers }}{% else %}#max_parallel_workers = 8{% endif %}		# number of max_worker_processes that
					# can be used in parallel operations
{% if postgresql_parallel_leader_participation is defined and postgresql_parallel_leader_participation %}parallel_leader_participation = {{ postgresql_parallel_leader_participation }}{% else %}#parallel_leader_participation = on{% endif %}
{% if postgresql_old_snapshot_threshold is defined and postgresql_old_snapshot_threshold %}old_snapshot_threshold = {{ postgresql_old_snapshot_threshold }}{% else %}#old_snapshot_threshold = -1{% endif %}		# 1min-60d; -1 disables; 0 is immediate
					# (change requires restart)


#------------------------------------------------------------------------------
# WRITE-AHEAD LOG
#------------------------------------------------------------------------------

# - Settings -

{% if postgresql_wal_level is defined and postgresql_wal_level %}wal_level = {{ postgresql_wal_level }}{% else %}#wal_level = replica{% endif %}			# minimal, replica, or logical
					# (change requires restart)
{% if postgresql_fsync is defined and postgresql_fsync %}fsync = {{ postgresql_fsync }}{% else %}#fsync = on{% endif %}				# flush data to disk for crash safety
					# (turning this off can cause
					# unrecoverable data corruption)
{% if postgresql_synchronous_commit is defined and postgresql_synchronous_commit %}synchronous_commit = {{ postgresql_synchronous_commit }}{% else %}#synchronous_commit = on{% endif %}		# synchronization level;
					# off, local, remote_write, remote_apply, or on
{% if postgresql_wal_sync_method is defined and postgresql_wal_sync_method %}wal_sync_method = {{ postgresql_wal_sync_method }}{% else %}#wal_sync_method = fsync{% endif %}		# the default is the first option
					# supported by the operating system:
					#   open_datasync
					#   fdatasync (default on Linux and FreeBSD)
					#   fsync
					#   fsync_writethrough
					#   open_sync
{% if postgresql_full_page_writes is defined and postgresql_full_page_writes %}full_page_writes = {{ postgresql_full_page_writes }}{% else %}#full_page_writes = on{% endif %}			# recover from partial page writes
{% if postgresql_wal_log_hints is defined and postgresql_wal_log_hints %}wal_log_hints = {{ postgresql_wal_log_hints }}{% else %}#wal_log_hints = off{% endif %}			# also do full page writes of non-critical updates
					# (change requires restart)
{% if postgresql_wal_compression is defined and postgresql_wal_compression %}wal_compression = {{ postgresql_wal_compression }}{% else %}#wal_compression = off{% endif %}			# enables compression of full-page writes;
					# off, pglz, lz4, zstd, or on
{% if postgresql_wal_init_zero is defined and postgresql_wal_init_zero %}wal_init_zero = {{ postgresql_wal_init_zero }}{% else %}#wal_init_zero = on{% endif %}			# zero-fill new WAL files
{% if postgresql_wal_recycle is defined and postgresql_wal_recycle %}wal_recycle = {{ postgresql_wal_recycle }}{% else %}#wal_recycle = on{% endif %}			# recycle WAL files
{% if postgresql_wal_buffers is defined and postgresql_wal_buffers %}wal_buffers = {{ postgresql_wal_buffers }}{% else %}#wal_buffers = -1{% endif %}			# min 32kB, -1 sets based on shared_buffers
					# (change requires restart)
{% if postgresql_wal_writer_delay is defined and postgresql_wal_writer_delay %}wal_writer_delay = {{ postgresql_wal_writer_delay }}{% else %}#wal_writer_delay = 200ms{% endif %}		# 1-10000 milliseconds
{% if postgresql_wal_writer_flush_after is defined and postgresql_wal_writer_flush_after %}wal_writer_flush_after = {{ postgresql_wal_writer_flush_after }}{% else %}#wal_writer_flush_after = 1MB{% endif %}		# measured in pages, 0 disables
{% if postgresql_wal_skip_threshold is defined and postgresql_wal_skip_threshold %}wal_skip_threshold = {{ postgresql_wal_skip_threshold }}{% else %}#wal_skip_threshold = 2MB{% endif %}

{% if postgresql_commit_delay is defined and postgresql_commit_delay %}commit_delay = {{ postgresql_commit_delay }}{% else %}#commit_delay = 0{% endif %}			# range 0-100000, in microseconds
{% if postgresql_commit_siblings is defined and postgresql_commit_siblings %}commit_siblings = {{ postgresql_commit_siblings }}{% else %}#commit_siblings = 5{% endif %}			# range 1-1000

# - Checkpoints -

{% if postgresql_checkpoint_timeout is defined and postgresql_checkpoint_timeout %}checkpoint_timeout = {{ postgresql_checkpoint_timeout }}{% else %}#checkpoint_timeout = 5min{% endif %}		# range 30s-1d
{% if postgresql_checkpoint_completion_target is defined and postgresql_checkpoint_completion_target %}checkpoint_completion_target = {{ postgresql_checkpoint_completion_target }}{% else %}#checkpoint_completion_target = 0.9{% endif %}	# checkpoint target duration, 0.0 - 1.0
{% if postgresql_checkpoint_flush_after is defined and postgresql_checkpoint_flush_after %}checkpoint_flush_after = {{ postgresql_checkpoint_flush_after }}{% else %}#checkpoint_flush_after = 0{% endif %}		# measured in pages, 0 disables
{% if postgresql_checkpoint_warning is defined and postgresql_checkpoint_warning %}checkpoint_warning = {{ postgresql_checkpoint_warning }}{% else %}#checkpoint_warning = 30s{% endif %}		# 0 disables
{% if postgresql_max_wal_size is defined and postgresql_max_wal_size %}max_wal_size = {{ postgresql_max_wal_size }}{% else %}#max_wal_size = 1GB{% endif %}
{% if postgresql_min_wal_size is defined and postgresql_min_wal_size %}min_wal_size = {{ postgresql_min_wal_size }}{% else %}#min_wal_size = 80MB{% endif %}

# - Prefetching during recovery -

{% if postgresql_recovery_prefetch is defined and postgresql_recovery_prefetch %}recovery_prefetch = {{ postgresql_recovery_prefetch }}{% else %}#recovery_prefetch = try{% endif %}		# prefetch pages referenced in the WAL?
{% if postgresql_wal_decode_buffer_size is defined and postgresql_wal_decode_buffer_size %}wal_decode_buffer_size = {{ postgresql_wal_decode_buffer_size }}{% else %}#wal_decode_buffer_size = 512kB{% endif %}		# lookahead window used for prefetching
					# (change requires restart)

# - Archiving -

{% if postgresql_archive_mode is defined and postgresql_archive_mode %}archive_mode = {{ postgresql_archive_mode }}{% else %}#archive_mode = off{% endif %}		# enables archiving; off, on, or always
				# (change requires restart)
{% if postgresql_archive_library is defined and postgresql_archive_library %}archive_library = '{{ postgresql_archive_library }}'{% else %}#archive_library = ''{% endif %}		# library to use to archive a WAL file
				# (empty string indicates archive_command should
				# be used)
{% if postgresql_archive_command is defined and postgresql_archive_command %}archive_command = '{{ postgresql_archive_command }}'{% else %}#archive_command = ''{% endif %}		# command to use to archive a WAL file
				# placeholders: %p = path of file to archive
				#               %f = file name only
				# e.g. 'test ! -f /mnt/server/archivedir/%f && cp %p /mnt/server/archivedir/%f'
{% if postgresql_archive_timeout is defined and postgresql_archive_timeout %}archive_timeout = {{ postgresql_archive_timeout }}{% else %}#archive_timeout = 0{% endif %}		# force a WAL file switch after this
				# number of seconds; 0 disables

# - Archive Recovery -

# These are only used in recovery mode.

{% if postgresql_restore_command is defined and postgresql_restore_command %}restore_command = '{{ postgresql_restore_command }}'{% else %}#restore_command = ''{% endif %}		# command to use to restore an archived WAL file
				# placeholders: %p = path of file to restore
				#               %f = file name only
				# e.g. 'cp /mnt/server/archivedir/%f %p'
{% if postgresql_archive_cleanup_command is defined and postgresql_archive_cleanup_command %}archive_cleanup_command = '{{ postgresql_archive_cleanup_command }}'{% else %}#archive_cleanup_command = ''{% endif %}	# command to execute at every restartpoint
{% if postgresql_recovery_end_command is defined and postgresql_recovery_end_command %}recovery_end_command = '{{ postgresql_recovery_end_command }}'{% else %}#recovery_end_command = ''{% endif %}	# command to execute at completion of recovery

# - Recovery Target -

# Set these only when performing a targeted recovery.

{% if postgresql_recovery_target is defined and postgresql_recovery_target %}recovery_target = '{{ postgresql_recovery_target }}'{% else %}#recovery_target = ''{% endif %}		# 'immediate' to end recovery as soon as a
                                # consistent state is reached
				# (change requires restart)
{% if postgresql_recovery_target_name is defined and postgresql_recovery_target_name %}recovery_target_name = '{{ postgresql_recovery_target_name }}'{% else %}#recovery_target_name = ''{% endif %}	# the named restore point to which recovery will proceed
				# (change requires restart)
{% if postgresql_recovery_target_time is defined and postgresql_recovery_target_time %}recovery_target_time = '{{ postgresql_recovery_target_time }}'{% else %}#recovery_target_time = ''{% endif %}	# the time stamp up to which recovery will proceed
				# (change requires restart)
{% if postgresql_recovery_target_xid is defined and postgresql_recovery_target_xid %}recovery_target_xid = '{{ postgresql_recovery_target_xid }}'{% else %}#recovery_target_xid = ''{% endif %}	# the transaction ID up to which recovery will proceed
				# (change requires restart)
{% if postgresql_recovery_target_lsn is defined and postgresql_recovery_target_lsn %}recovery_target_lsn = '{{ postgresql_recovery_target_lsn }}'{% else %}#recovery_target_lsn = ''{% endif %}	# the WAL LSN up to which recovery will proceed
				# (change requires restart)
{% if postgresql_recovery_target_inclusive is defined and postgresql_recovery_target_inclusive %}recovery_target_inclusive = {{ postgresql_recovery_target_inclusive }}{% else %}#recovery_target_inclusive = on{% endif %} # Specifies whether to stop:
				# just after the specified recovery target (on)
				# just before the recovery target (off)
				# (change requires restart)
{% if postgresql_recovery_target_timeline is defined and postgresql_recovery_target_timeline %}recovery_target_timeline = '{{ postgresql_recovery_target_timeline }}'{% else %}#recovery_target_timeline = 'latest'{% endif %}	# 'current', 'latest', or timeline ID
				# (change requires restart)
{% if postgresql_recovery_target_action is defined and postgresql_recovery_target_action %}recovery_target_action = '{{ postgresql_recovery_target_action }}'{% else %}#recovery_target_action = 'pause'{% endif %}	# 'pause', 'promote', 'shutdown'
				# (change requires restart)


#------------------------------------------------------------------------------
# REPLICATION
#------------------------------------------------------------------------------

# - Sending Servers -

# Set these on the primary and on any standby that will send replication data.

{% if postgresql_max_wal_senders is defined and postgresql_max_wal_senders %}max_wal_senders = {{ postgresql_max_wal_senders }}{% else %}#max_wal_senders = 10{% endif %}		# max number of walsender processes
				# (change requires restart)
{% if postgresql_max_replication_slots is defined and postgresql_max_replication_slots %}max_replication_slots = {{ postgresql_max_replication_slots }}{% else %}#max_replication_slots = 10{% endif %}	# max number of replication slots
				# (change requires restart)
{% if postgresql_wal_keep_size is defined and postgresql_wal_keep_size %}wal_keep_size = {{ postgresql_wal_keep_size }}{% else %}#wal_keep_size = 0{% endif %}		# in megabytes; 0 disables
{% if postgresql_max_slot_wal_keep_size is defined and postgresql_max_slot_wal_keep_size %}max_slot_wal_keep_size = {{ postgresql_max_slot_wal_keep_size }}{% else %}#max_slot_wal_keep_size = -1{% endif %}	# in megabytes; -1 disables
{% if postgresql_wal_sender_timeout is defined and postgresql_wal_sender_timeout %}wal_sender_timeout = {{ postgresql_wal_sender_timeout }}{% else %}#wal_sender_timeout = 60s{% endif %}	# in milliseconds; 0 disables
{% if postgresql_track_commit_timestamp is defined and postgresql_track_commit_timestamp %}track_commit_timestamp = {{ postgresql_track_commit_timestamp }}{% else %}#track_commit_timestamp = off{% endif %}	# collect timestamp of transaction commit
				# (change requires restart)

# - Primary Server -

# These settings are ignored on a standby server.

{% if postgresql_synchronous_standby_names is defined and postgresql_synchronous_standby_names %}synchronous_standby_names = '{{ postgresql_synchronous_standby_names | join('\",\"') }}'{% else %}#synchronous_standby_names = ''{% endif %}	# standby servers that provide sync rep
				# method to choose sync standbys, number of sync standbys,
				# and comma-separated list of application_name
				# from standby(s); '*' = all

# - Standby Servers -

# These settings are ignored on a primary server.

{% if postgresql_primary_conninfo is defined and postgresql_primary_conninfo %}primary_conninfo = '{{ postgresql_primary_conninfo }}'{% else %}#primary_conninfo = ''{% endif %}			# connection string to sending server
{% if postgresql_primary_slot_name is defined and postgresql_primary_slot_name %}primary_slot_name = '{{ postgresql_primary_slot_name }}'{% else %}#primary_slot_name = ''{% endif %}			# replication slot on sending server
{% if postgresql_hot_standby is defined and postgresql_hot_standby %}hot_standby = {{ postgresql_hot_standby }}{% else %}#hot_standby = on{% endif %}			# "off" disallows queries during recovery
					# (change requires restart)
{% if postgresql_max_standby_archive_delay is defined and postgresql_max_standby_archive_delay %}max_standby_archive_delay = {{ postgresql_max_standby_archive_delay }}{% else %}#max_standby_archive_delay = 30s{% endif %}	# max delay before canceling queries
					# when reading WAL from archive;
					# -1 allows indefinite delay
{% if postgresql_max_standby_streaming_delay is defined and postgresql_max_standby_streaming_delay %}max_standby_streaming_delay = {{ postgresql_max_standby_streaming_delay }}{% else %}#max_standby_streaming_delay = 30s{% endif %}	# max delay before canceling queries
					# when reading streaming WAL;
					# -1 allows indefinite delay
{% if postgresql_wal_receiver_create_temp_slot is defined and postgresql_wal_receiver_create_temp_slot %}wal_receiver_create_temp_slot = {{ postgresql_wal_receiver_create_temp_slot }}{% else %}#wal_receiver_create_temp_slot = off{% endif %}	# create temp slot if primary_slot_name
					# is not set
{% if postgresql_wal_receiver_status_interval is defined and postgresql_wal_receiver_status_interval %}wal_receiver_status_interval = {{ postgresql_wal_receiver_status_interval }}{% else %}#wal_receiver_status_interval = 10s{% endif %}	# send replies at least this often
					# 0 disables
{% if postgresql_hot_standby_feedback is defined and postgresql_hot_standby_feedback %}hot_standby_feedback = {{ postgresql_hot_standby_feedback }}{% else %}#hot_standby_feedback = off{% endif %}		# send info from standby to prevent
					# query conflicts
{% if postgresql_wal_receiver_timeout is defined and postgresql_wal_receiver_timeout %}wal_receiver_timeout = {{ postgresql_wal_receiver_timeout }}{% else %}#wal_receiver_timeout = 60s{% endif %}		# time that receiver waits for
					# communication from primary
					# in milliseconds; 0 disables
{% if postgresql_wal_retrieve_retry_interval is defined and postgresql_wal_retrieve_retry_interval %}wal_retrieve_retry_interval = {{ postgresql_wal_retrieve_retry_interval }}{% else %}#wal_retrieve_retry_interval = 5s{% endif %}	# time to wait before retrying to
					# retrieve WAL after a failed attempt
{% if postgresql_recovery_min_apply_delay is defined and postgresql_recovery_min_apply_delay %}recovery_min_apply_delay = {{ postgresql_recovery_min_apply_delay }}{% else %}#recovery_min_apply_delay = 0{% endif %}		# minimum delay for applying changes during recovery

# - Subscribers -

# These settings are ignored on a publisher.

{% if postgresql_max_logical_replication_workers is defined and postgresql_max_logical_replication_workers %}max_logical_replication_workers = {{ postgresql_max_logical_replication_workers }}{% else %}#max_logical_replication_workers = 4{% endif %}	# taken from max_worker_processes
					# (change requires restart)
{% if postgresql_max_sync_workers_per_subscription is defined and postgresql_max_sync_workers_per_subscription %}max_sync_workers_per_subscription = {{ postgresql_max_sync_workers_per_subscription }}{% else %}#max_sync_workers_per_subscription = 2{% endif %}	# taken from max_logical_replication_workers
{% if postgresql_max_parallel_apply_workers_per_subscription is defined and postgresql_max_parallel_apply_workers_per_subscription %}max_parallel_apply_workers_per_subscription = {{ postgresql_max_parallel_apply_workers_per_subscription }}{% else %}#max_parallel_apply_workers_per_subscription = 2{% endif %}	# taken from max_logical_replication_workers


#------------------------------------------------------------------------------
# QUERY TUNING
#------------------------------------------------------------------------------

# - Planner Method Configuration -

{% if postgresql_enable_async_append is defined and postgresql_enable_async_append %}enable_async_append = {{ postgresql_enable_async_append }}{% else %}#enable_async_append = on{% endif %}
{% if postgresql_enable_bitmapscan is defined and postgresql_enable_bitmapscan %}enable_bitmapscan = {{ postgresql_enable_bitmapscan }}{% else %}#enable_bitmapscan = on{% endif %}
{% if postgresql_enable_gathermerge is defined and postgresql_enable_gathermerge %}enable_gathermerge = {{ postgresql_enable_gathermerge }}{% else %}#enable_gathermerge = on{% endif %}
{% if postgresql_enable_hashagg is defined and postgresql_enable_hashagg %}enable_hashagg = {{ postgresql_enable_hashagg }}{% else %}#enable_hashagg = on{% endif %}
{% if postgresql_enable_hashjoin is defined and postgresql_enable_hashjoin %}enable_hashjoin = {{ postgresql_enable_hashjoin }}{% else %}#enable_hashjoin = on{% endif %}
{% if postgresql_enable_incremental_sort is defined and postgresql_enable_incremental_sort %}enable_incremental_sort = {{ postgresql_enable_incremental_sort }}{% else %}#enable_incremental_sort = on{% endif %}
{% if postgresql_enable_indexscan is defined and postgresql_enable_indexscan %}enable_indexscan = {{ postgresql_enable_indexscan }}{% else %}#enable_indexscan = on{% endif %}
{% if postgresql_enable_indexonlyscan is defined and postgresql_enable_indexonlyscan %}enable_indexonlyscan = {{ postgresql_enable_indexonlyscan }}{% else %}#enable_indexonlyscan = on{% endif %}
{% if postgresql_enable_material is defined and postgresql_enable_material %}enable_material = {{ postgresql_enable_material }}{% else %}#enable_material = on{% endif %}
{% if postgresql_enable_memoize is defined and postgresql_enable_memoize %}enable_memoize = {{ postgresql_enable_memoize }}{% else %}#enable_memoize = on{% endif %}
{% if postgresql_enable_mergejoin is defined and postgresql_enable_mergejoin %}enable_mergejoin = {{ postgresql_enable_mergejoin }}{% else %}#enable_mergejoin = on{% endif %}
{% if postgresql_enable_nestloop is defined and postgresql_enable_nestloop %}enable_nestloop = {{ postgresql_enable_nestloop }}{% else %}#enable_nestloop = on{% endif %}
{% if postgresql_enable_parallel_append is defined and postgresql_enable_parallel_append %}enable_parallel_append = {{ postgresql_enable_parallel_append }}{% else %}#enable_parallel_append = on{% endif %}
{% if postgresql_enable_parallel_hash is defined and postgresql_enable_parallel_hash %}enable_parallel_hash = {{ postgresql_enable_parallel_hash }}{% else %}#enable_parallel_hash = on{% endif %}
{% if postgresql_enable_partition_pruning is defined and postgresql_enable_partition_pruning %}enable_partition_pruning = {{ postgresql_enable_partition_pruning }}{% else %}#enable_partition_pruning = on{% endif %}
{% if postgresql_enable_partitionwise_join is defined and postgresql_enable_partitionwise_join %}enable_partitionwise_join = {{ postgresql_enable_partitionwise_join }}{% else %}#enable_partitionwise_join = off{% endif %}
{% if postgresql_enable_partitionwise_aggregate is defined and postgresql_enable_partitionwise_aggregate %}enable_partitionwise_aggregate = {{ postgresql_enable_partitionwise_aggregate }}{% else %}#enable_partitionwise_aggregate = off{% endif %}
{% if postgresql_enable_presorted_aggregate is defined and postgresql_enable_presorted_aggregate %}enable_presorted_aggregate = {{ postgresql_enable_presorted_aggregate }}{% else %}#enable_presorted_aggregate = on{% endif %}
{% if postgresql_enable_seqscan is defined and postgresql_enable_seqscan %}enable_seqscan = {{ postgresql_enable_seqscan }}{% else %}#enable_seqscan = on{% endif %}
{% if postgresql_enable_sort is defined and postgresql_enable_sort %}enable_sort = {{ postgresql_enable_sort }}{% else %}#enable_sort = on{% endif %}
{% if postgresql_enable_tidscan is defined and postgresql_enable_tidscan %}enable_tidscan = {{ postgresql_enable_tidscan }}{% else %}#enable_tidscan = on{% endif %}

# - Planner Cost Constants -

{% if postgresql_seq_page_cost is defined and postgresql_seq_page_cost %}seq_page_cost = {{ postgresql_seq_page_cost }}{% else %}#seq_page_cost = 1.0{% endif %}			# measured on an arbitrary scale
{% if postgresql_random_page_cost is defined and postgresql_random_page_cost %}random_page_cost = {{ postgresql_random_page_cost }}{% else %}#random_page_cost = 4.0{% endif %}			# same scale as above
{% if postgresql_cpu_tuple_cost is defined and postgresql_cpu_tuple_cost %}cpu_tuple_cost = {{ postgresql_cpu_tuple_cost }}{% else %}#cpu_tuple_cost = 0.01{% endif %}			# same scale as above
{% if postgresql_cpu_index_tuple_cost is defined and postgresql_cpu_index_tuple_cost %}cpu_index_tuple_cost = {{ postgresql_cpu_index_tuple_cost }}{% else %}#cpu_index_tuple_cost = 0.005{% endif %}		# same scale as above
{% if postgresql_cpu_operator_cost is defined and postgresql_cpu_operator_cost %}cpu_operator_cost = {{ postgresql_cpu_operator_cost }}{% else %}#cpu_operator_cost = 0.0025{% endif %}		# same scale as above
{% if postgresql_parallel_setup_cost is defined and postgresql_parallel_setup_cost %}parallel_setup_cost = {{ postgresql_parallel_setup_cost }}{% else %}#parallel_setup_cost = 1000.0{% endif %}	# same scale as above
{% if postgresql_parallel_tuple_cost is defined and postgresql_parallel_tuple_cost %}parallel_tuple_cost = {{ postgresql_parallel_tuple_cost }}{% else %}#parallel_tuple_cost = 0.1{% endif %}		# same scale as above
{% if postgresql_min_parallel_table_scan_size is defined and postgresql_min_parallel_table_scan_size %}min_parallel_table_scan_size = {{ postgresql_min_parallel_table_scan_size }}{% else %}#min_parallel_table_scan_size = 8MB{% endif %}
{% if postgresql_min_parallel_index_scan_size is defined and postgresql_min_parallel_index_scan_size %}min_parallel_index_scan_size = {{ postgresql_min_parallel_index_scan_size }}{% else %}#min_parallel_index_scan_size = 512kB{% endif %}
{% if postgresql_effective_cache_size is defined and postgresql_effective_cache_size %}effective_cache_size = {{ postgresql_effective_cache_size }}{% else %}#effective_cache_size = 4GB{% endif %}

{% if postgresql_jit_above_cost is defined and postgresql_jit_above_cost %}jit_above_cost = {{ postgresql_jit_above_cost }}{% else %}#jit_above_cost = 100000{% endif %}		# perform JIT compilation if available
					# and query more expensive than this;
					# -1 disables
{% if postgresql_jit_inline_above_cost is defined and postgresql_jit_inline_above_cost %}jit_inline_above_cost = {{ postgresql_jit_inline_above_cost }}{% else %}#jit_inline_above_cost = 500000{% endif %}		# inline small functions if query is
					# more expensive than this; -1 disables
{% if postgresql_jit_optimize_above_cost is defined and postgresql_jit_optimize_above_cost %}jit_optimize_above_cost = {{ postgresql_jit_optimize_above_cost }}{% else %}#jit_optimize_above_cost = 500000{% endif %}	# use expensive JIT optimizations if
					# query is more expensive than this;
					# -1 disables

# - Genetic Query Optimizer -

{% if postgresql_geqo is defined and postgresql_geqo %}geqo = {{ postgresql_geqo }}{% else %}#geqo = on{% endif %}
{% if postgresql_geqo_threshold is defined and postgresql_geqo_threshold %}geqo_threshold = {{ postgresql_geqo_threshold }}{% else %}#geqo_threshold = 12{% endif %}
{% if postgresql_geqo_effort is defined and postgresql_geqo_effort %}geqo_effort = {{ postgresql_geqo_effort }}{% else %}#geqo_effort = 5{% endif %}			# range 1-10
{% if postgresql_geqo_pool_size is defined and postgresql_geqo_pool_size %}geqo_pool_size = {{ postgresql_geqo_pool_size }}{% else %}#geqo_pool_size = 0{% endif %}			# selects default based on effort
{% if postgresql_geqo_generations is defined and postgresql_geqo_generations %}geqo_generations = {{ postgresql_geqo_generations }}{% else %}#geqo_generations = 0{% endif %}			# selects default based on effort
{% if postgresql_geqo_selection_bias is defined and postgresql_geqo_selection_bias %}geqo_selection_bias = {{ postgresql_geqo_selection_bias }}{% else %}#geqo_selection_bias = 2.0{% endif %}		# range 1.5-2.0
{% if postgresql_geqo_seed is defined and postgresql_geqo_seed %}geqo_seed = {{ postgresql_geqo_seed }}{% else %}#geqo_seed = 0.0{% endif %}			# range 0.0-1.0

# - Other Planner Options -

{% if postgresql_default_statistics_target is defined and postgresql_default_statistics_target %}default_statistics_target = {{ postgresql_default_statistics_target }}{% else %}#default_statistics_target = 100{% endif %}	# range 1-10000
{% if postgresql_constraint_exclusion is defined and postgresql_constraint_exclusion %}constraint_exclusion = {{ postgresql_constraint_exclusion }}{% else %}#constraint_exclusion = partition{% endif %}	# on, off, or partition
{% if postgresql_cursor_tuple_fraction is defined and postgresql_cursor_tuple_fraction %}cursor_tuple_fraction = {{ postgresql_cursor_tuple_fraction }}{% else %}#cursor_tuple_fraction = 0.1{% endif %}		# range 0.0-1.0
{% if postgresql_from_collapse_limit is defined and postgresql_from_collapse_limit %}from_collapse_limit = {{ postgresql_from_collapse_limit }}{% else %}#from_collapse_limit = 8{% endif %}
{% if postgresql_jit is defined and postgresql_jit %}jit = {{ postgresql_jit }}{% else %}#jit = on{% endif %}				# allow JIT compilation
{% if postgresql_join_collapse_limit is defined and postgresql_join_collapse_limit %}join_collapse_limit = {{ postgresql_join_collapse_limit }}{% else %}#join_collapse_limit = 8{% endif %}		# 1 disables collapsing of explicit
					# JOIN clauses
{% if postgresql_plan_cache_mode is defined and postgresql_plan_cache_mode %}plan_cache_mode = {{ postgresql_plan_cache_mode }}{% else %}#plan_cache_mode = auto{% endif %}			# auto, force_generic_plan or
					# force_custom_plan
{% if postgresql_recursive_worktable_factor is defined and postgresql_recursive_worktable_factor %}recursive_worktable_factor = {{ postgresql_recursive_worktable_factor }}{% else %}#recursive_worktable_factor = 10.0{% endif %}	# range 0.001-1000000


#------------------------------------------------------------------------------
# REPORTING AND LOGGING
#------------------------------------------------------------------------------

# - Where to Log -

{% if postgresql_log_destination is defined and postgresql_log_destination %}log_destination = '{{ postgresql_log_destination }}'{% else %}#log_destination = 'stderr'{% endif %}		# Valid values are combinations of
					# stderr, csvlog, jsonlog, syslog, and
					# eventlog, depending on platform.
					# csvlog and jsonlog require
					# logging_collector to be on.

# This is used when logging to stderr:
{% if postgresql_logging_collector is defined and postgresql_logging_collector %}logging_collector = {{ postgresql_logging_collector }}{% else %}#logging_collector = off{% endif %}		# Enable capturing of stderr, jsonlog,
					# and csvlog into log files. Required
					# to be on for csvlogs and jsonlogs.
					# (change requires restart)

# These are only used if logging_collector is on:
{% if postgresql_log_directory is defined and postgresql_log_directory %}log_directory = '{{ postgresql_log_directory }}'{% else %}#log_directory = 'log'{% endif %}			# directory where log files are written,
					# can be absolute or relative to PGDATA
{% if postgresql_log_filename is defined and postgresql_log_filename %}log_filename = '{{ postgresql_log_filename }}'{% else %}#log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'{% endif %}	# log file name pattern,
					# can include strftime() escapes
{% if postgresql_log_file_mode is defined and postgresql_log_file_mode %}log_file_mode = {{ postgresql_log_file_mode }}{% else %}#log_file_mode = 0600{% endif %}			# creation mode for log files,
					# begin with 0 to use octal notation
{% if postgresql_log_rotation_age is defined and postgresql_log_rotation_age %}log_rotation_age = {{ postgresql_log_rotation_age }}{% else %}#log_rotation_age = 1d{% endif %}			# Automatic rotation of logfiles will
					# happen after that time.  0 disables.
{% if postgresql_log_rotation_size is defined and postgresql_log_rotation_size %}log_rotation_size = {{ postgresql_log_rotation_size }}{% else %}#log_rotation_size = 10MB{% endif %}		# Automatic rotation of logfiles will
					# happen after that much log output.
					# 0 disables.
{% if postgresql_log_truncate_on_rotation is defined and postgresql_log_truncate_on_rotation %}log_truncate_on_rotation = {{ postgresql_log_truncate_on_rotation }}{% else %}#log_truncate_on_rotation = off{% endif %}		# If on, an existing log file with the
					# same name as the new log file will be
					# truncated rather than appended to.
					# But such truncation only occurs on
					# time-driven rotation, not on restarts
					# or size-driven rotation.  Default is
					# off, meaning append to existing files
					# in all cases.

# These are relevant when logging to syslog:
{% if postgresql_syslog_facility is defined and postgresql_syslog_facility %}syslog_facility = '{{ postgresql_syslog_facility }}'{% else %}#syslog_facility = 'LOCAL0'{% endif %}
{% if postgresql_syslog_ident is defined and postgresql_syslog_ident %}syslog_ident = '{{ postgresql_syslog_ident }}'{% else %}#syslog_ident = 'postgres'{% endif %}
{% if postgresql_syslog_sequence_numbers is defined and postgresql_syslog_sequence_numbers %}syslog_sequence_numbers = {{ postgresql_syslog_sequence_numbers }}{% else %}#syslog_sequence_numbers = on{% endif %}
{% if postgresql_syslog_split_messages is defined and postgresql_syslog_split_messages %}syslog_split_messages = {{ postgresql_syslog_split_messages }}{% else %}#syslog_split_messages = on{% endif %}

# This is only relevant when logging to eventlog (Windows):
# (change requires restart)
{% if postgresql_event_source is defined and postgresql_event_source %}event_source = '{{ postgresql_event_source }}'{% else %}#event_source = 'PostgreSQL'{% endif %}

# - When to Log -

{% if postgresql_log_min_messages is defined and postgresql_log_min_messages %}log_min_messages = {{ postgresql_log_min_messages }}{% else %}#log_min_messages = warning{% endif %}		# values in order of decreasing detail:
					#   debug5
					#   debug4
					#   debug3
					#   debug2
					#   debug1
					#   info
					#   notice
					#   warning
					#   error
					#   log
					#   fatal
					#   panic

{% if postgresql_log_min_error_statement is defined and postgresql_log_min_error_statement %}log_min_error_statement = {{ postgresql_log_min_error_statement }}{% else %}#log_min_error_statement = error{% endif %}	# values in order of decreasing detail:
					#   debug5
					#   debug4
					#   debug3
					#   debug2
					#   debug1
					#   info
					#   notice
					#   warning
					#   error
					#   log
					#   fatal
					#   panic (effectively off)

{% if postgresql_log_min_duration_statement is defined and postgresql_log_min_duration_statement %}log_min_duration_statement = {{ postgresql_log_min_duration_statement }}{% else %}#log_min_duration_statement = -1{% endif %}	# -1 is disabled, 0 logs all statements
					# and their durations, > 0 logs only
					# statements running at least this number
					# of milliseconds

{% if postgresql_log_min_duration_sample is defined and postgresql_log_min_duration_sample %}log_min_duration_sample = {{ postgresql_log_min_duration_sample }}{% else %}#log_min_duration_sample = -1{% endif %}		# -1 is disabled, 0 logs a sample of statements
					# and their durations, > 0 logs only a sample of
					# statements running at least this number
					# of milliseconds;
					# sample fraction is determined by log_statement_sample_rate

{% if postgresql_log_statement_sample_rate is defined and postgresql_log_statement_sample_rate %}log_statement_sample_rate = {{ postgresql_log_statement_sample_rate }}{% else %}#log_statement_sample_rate = 1.0{% endif %}	# fraction of logged statements exceeding
					# log_min_duration_sample to be logged;
					# 1.0 logs all such statements, 0.0 never logs


{% if postgresql_log_transaction_sample_rate is defined and postgresql_log_transaction_sample_rate %}log_transaction_sample_rate = {{ postgresql_log_transaction_sample_rate }}{% else %}#log_transaction_sample_rate = 0.0{% endif %}	# fraction of transactions whose statements
					# are logged regardless of their duration; 1.0 logs all
					# statements from all transactions, 0.0 never logs

{% if postgresql_log_startup_progress_interval is defined and postgresql_log_startup_progress_interval %}log_startup_progress_interval = {{ postgresql_log_startup_progress_interval }}{% else %}#log_startup_progress_interval = 10s{% endif %}	# Time between progress updates for
					# long-running startup operations.
					# 0 disables the feature, > 0 indicates
					# the interval in milliseconds.

# - What to Log -

{% if postgresql_debug_print_parse is defined and postgresql_debug_print_parse %}debug_print_parse = {{ postgresql_debug_print_parse }}{% else %}#debug_print_parse = off{% endif %}
{% if postgresql_debug_print_rewritten is defined and postgresql_debug_print_rewritten %}debug_print_rewritten = {{ postgresql_debug_print_rewritten }}{% else %}#debug_print_rewritten = off{% endif %}
{% if postgresql_debug_print_plan is defined and postgresql_debug_print_plan %}debug_print_plan = {{ postgresql_debug_print_plan }}{% else %}#debug_print_plan = off{% endif %}
{% if postgresql_debug_pretty_print is defined and postgresql_debug_pretty_print %}debug_pretty_print = {{ postgresql_debug_pretty_print }}{% else %}#debug_pretty_print = on{% endif %}
{% if postgresql_log_autovacuum_min_duration is defined and postgresql_log_autovacuum_min_duration %}log_autovacuum_min_duration = {{ postgresql_log_autovacuum_min_duration }}{% else %}#log_autovacuum_min_duration = 10min{% endif %}	# log autovacuum activity;
					# -1 disables, 0 logs all actions and
					# their durations, > 0 logs only
					# actions running at least this number
					# of milliseconds.
{% if postgresql_log_checkpoints is defined and postgresql_log_checkpoints %}log_checkpoints = {{ postgresql_log_checkpoints }}{% else %}#log_checkpoints = on{% endif %}
{% if postgresql_log_connections is defined and postgresql_log_connections %}log_connections = {{ postgresql_log_connections }}{% else %}#log_connections = off{% endif %}
{% if postgresql_log_disconnections is defined and postgresql_log_disconnections %}log_disconnections = {{ postgresql_log_disconnections }}{% else %}#log_disconnections = off{% endif %}
{% if postgresql_log_duration is defined and postgresql_log_duration %}log_duration = {{ postgresql_log_duration }}{% else %}#log_duration = off{% endif %}
{% if postgresql_log_error_verbosity is defined and postgresql_log_error_verbosity %}log_error_verbosity = {{ postgresql_log_error_verbosity }}{% else %}#log_error_verbosity = default{% endif %}		# terse, default, or verbose messages
{% if postgresql_log_hostname is defined and postgresql_log_hostname %}log_hostname = {{ postgresql_log_hostname }}{% else %}#log_hostname = off{% endif %}
{% if postgresql_log_line_prefix is defined and postgresql_log_line_prefix %}log_line_prefix = '{{ postgresql_log_line_prefix }}'{% else %}#log_line_prefix = '%m [%p] '{% endif %}		# special values:
					#   %a = application name
					#   %u = user name
					#   %d = database name
					#   %r = remote host and port
					#   %h = remote host
					#   %b = backend type
					#   %p = process ID
					#   %P = process ID of parallel group leader
					#   %t = timestamp without milliseconds
					#   %m = timestamp with milliseconds
					#   %n = timestamp with milliseconds (as a Unix epoch)
					#   %Q = query ID (0 if none or not computed)
					#   %i = command tag
					#   %e = SQL state
					#   %c = session ID
					#   %l = session line number
					#   %s = session start timestamp
					#   %v = virtual transaction ID
					#   %x = transaction ID (0 if none)
					#   %q = stop here in non-session
					#        processes
					#   %% = '%'
					# e.g. '<%u%%%d> '
{% if postgresql_log_lock_waits is defined and postgresql_log_lock_waits %}log_lock_waits = {{ postgresql_log_lock_waits }}{% else %}#log_lock_waits = off{% endif %}			# log lock waits >= deadlock_timeout
{% if postgresql_log_recovery_conflict_waits is defined and postgresql_log_recovery_conflict_waits %}log_recovery_conflict_waits = {{ postgresql_log_recovery_conflict_waits }}{% else %}#log_recovery_conflict_waits = off{% endif %}	# log standby recovery conflict waits
					# >= deadlock_timeout
{% if postgresql_log_parameter_max_length is defined and postgresql_log_parameter_max_length %}log_parameter_max_length = {{ postgresql_log_parameter_max_length }}{% else %}#log_parameter_max_length = -1{% endif %}		# when logging statements, limit logged
					# bind-parameter values to N bytes;
					# -1 means print in full, 0 disables
{% if postgresql_log_parameter_max_length_on_error is defined and postgresql_log_parameter_max_length_on_error %}log_parameter_max_length_on_error = {{ postgresql_log_parameter_max_length_on_error }}{% else %}#log_parameter_max_length_on_error = 0{% endif %}	# when logging an error, limit logged
					# bind-parameter values to N bytes;
					# -1 means print in full, 0 disables
{% if postgresql_log_statement is defined and postgresql_log_statement %}log_statement = '{{ postgresql_log_statement }}'{% else %}#log_statement = 'none'{% endif %}			# none, ddl, mod, all
{% if postgresql_log_replication_commands is defined and postgresql_log_replication_commands %}log_replication_commands = {{ postgresql_log_replication_commands }}{% else %}#log_replication_commands = off{% endif %}
{% if postgresql_log_temp_files is defined and postgresql_log_temp_files %}log_temp_files = {{ postgresql_log_temp_files }}{% else %}#log_temp_files = -1{% endif %}			# log temporary files equal or larger
					# than the specified size in kilobytes;
					# -1 disables, 0 logs all temp files
{% if postgresql_log_timezone is defined and postgresql_log_timezone %}log_timezone = '{{ postgresql_log_timezone }}'{% else %}#log_timezone = 'GMT'{% endif %}

# - Process Title -

{% if postgresql_cluster_name is defined and postgresql_cluster_name %}cluster_name = '{{ postgresql_cluster_name }}'{% else %}#cluster_name = ''{% endif %}			# added to process titles if nonempty
					# (change requires restart)
{% if postgresql_update_process_title is defined and postgresql_update_process_title %}update_process_title = {{ postgresql_update_process_title }}{% else %}#update_process_title = on{% endif %}


#------------------------------------------------------------------------------
# STATISTICS
#------------------------------------------------------------------------------

# - Cumulative Query and Index Statistics -

{% if postgresql_track_activities is defined and postgresql_track_activities %}track_activities = {{ postgresql_track_activities }}{% else %}#track_activities = on{% endif %}
{% if postgresql_track_activity_query_size is defined and postgresql_track_activity_query_size %}track_activity_query_size = {{ postgresql_track_activity_query_size }}{% else %}#track_activity_query_size = 1024{% endif %}	# (change requires restart)
{% if postgresql_track_counts is defined and postgresql_track_counts %}track_counts = {{ postgresql_track_counts }}{% else %}#track_counts = on{% endif %}
{% if postgresql_track_io_timing is defined and postgresql_track_io_timing %}track_io_timing = {{ postgresql_track_io_timing }}{% else %}#track_io_timing = off{% endif %}
{% if postgresql_track_wal_io_timing is defined and postgresql_track_wal_io_timing %}track_wal_io_timing = {{ postgresql_track_wal_io_timing }}{% else %}#track_wal_io_timing = off{% endif %}
{% if postgresql_track_functions is defined and postgresql_track_functions %}track_functions = {{ postgresql_track_functions }}{% else %}#track_functions = none{% endif %}			# none, pl, all
{% if postgresql_stats_fetch_consistency is defined and postgresql_stats_fetch_consistency %}stats_fetch_consistency = {{ postgresql_stats_fetch_consistency }}{% else %}#stats_fetch_consistency = cache{% endif %}	# cache, none, snapshot


# - Monitoring -

{% if postgresql_compute_query_id is defined and postgresql_compute_query_id %}compute_query_id = {{ postgresql_compute_query_id }}{% else %}#compute_query_id = auto{% endif %}
{% if postgresql_log_statement_stats is defined and postgresql_log_statement_stats %}log_statement_stats = {{ postgresql_log_statement_stats }}{% else %}#log_statement_stats = off{% endif %}
{% if postgresql_log_parser_stats is defined and postgresql_log_parser_stats %}log_parser_stats = {{ postgresql_log_parser_stats }}{% else %}#log_parser_stats = off{% endif %}
{% if postgresql_log_planner_stats is defined and postgresql_log_planner_stats %}log_planner_stats = {{ postgresql_log_planner_stats }}{% else %}#log_planner_stats = off{% endif %}
{% if postgresql_log_executor_stats is defined and postgresql_log_executor_stats %}log_executor_stats = {{ postgresql_log_executor_stats }}{% else %}#log_executor_stats = off{% endif %}


#------------------------------------------------------------------------------
# AUTOVACUUM
#------------------------------------------------------------------------------

{% if postgresql_autovacuum is defined and postgresql_autovacuum %}autovacuum = {{ postgresql_autovacuum }}{% else %}#autovacuum = on{% endif %}			# Enable autovacuum subprocess?  'on'
					# requires track_counts to also be on.
{% if postgresql_autovacuum_max_workers is defined and postgresql_autovacuum_max_workers %}autovacuum_max_workers = {{ postgresql_autovacuum_max_workers }}{% else %}#autovacuum_max_workers = 3{% endif %}		# max number of autovacuum subprocesses
					# (change requires restart)
{% if postgresql_autovacuum_naptime is defined and postgresql_autovacuum_naptime %}autovacuum_naptime = {{ postgresql_autovacuum_naptime }}{% else %}#autovacuum_naptime = 1min{% endif %}		# time between autovacuum runs
{% if postgresql_autovacuum_vacuum_threshold is defined and postgresql_autovacuum_vacuum_threshold %}autovacuum_vacuum_threshold = {{ postgresql_autovacuum_vacuum_threshold }}{% else %}#autovacuum_vacuum_threshold = 50{% endif %}	# min number of row updates before
					# vacuum
{% if postgresql_autovacuum_vacuum_insert_threshold is defined and postgresql_autovacuum_vacuum_insert_threshold %}autovacuum_vacuum_insert_threshold = {{ postgresql_autovacuum_vacuum_insert_threshold }}{% else %}#autovacuum_vacuum_insert_threshold = 1000{% endif %}	# min number of row inserts
					# before vacuum; -1 disables insert
					# vacuums
{% if postgresql_autovacuum_analyze_threshold is defined and postgresql_autovacuum_analyze_threshold %}autovacuum_analyze_threshold = {{ postgresql_autovacuum_analyze_threshold }}{% else %}#autovacuum_analyze_threshold = 50{% endif %}	# min number of row updates before
					# analyze
{% if postgresql_autovacuum_vacuum_scale_factor is defined and postgresql_autovacuum_vacuum_scale_factor %}autovacuum_vacuum_scale_factor = {{ postgresql_autovacuum_vacuum_scale_factor }}{% else %}#autovacuum_vacuum_scale_factor = 0.2{% endif %}	# fraction of table size before vacuum
{% if postgresql_autovacuum_vacuum_insert_scale_factor is defined and postgresql_autovacuum_vacuum_insert_scale_factor %}autovacuum_vacuum_insert_scale_factor = {{ postgresql_autovacuum_vacuum_insert_scale_factor }}{% else %}#autovacuum_vacuum_insert_scale_factor = 0.2{% endif %}	# fraction of inserts over table
					# size before insert vacuum
{% if postgresql_autovacuum_analyze_scale_factor is defined and postgresql_autovacuum_analyze_scale_factor %}autovacuum_analyze_scale_factor = {{ postgresql_autovacuum_analyze_scale_factor }}{% else %}#autovacuum_analyze_scale_factor = 0.1{% endif %}	# fraction of table size before analyze
{% if postgresql_autovacuum_freeze_max_age is defined and postgresql_autovacuum_freeze_max_age %}autovacuum_freeze_max_age = {{ postgresql_autovacuum_freeze_max_age }}{% else %}#autovacuum_freeze_max_age = 200000000{% endif %}	# maximum XID age before forced vacuum
					# (change requires restart)
{% if postgresql_autovacuum_multixact_freeze_max_age is defined and postgresql_autovacuum_multixact_freeze_max_age %}autovacuum_multixact_freeze_max_age = {{ postgresql_autovacuum_multixact_freeze_max_age }}{% else %}#autovacuum_multixact_freeze_max_age = 400000000{% endif %}	# maximum multixact age
					# before forced vacuum
					# (change requires restart)
{% if postgresql_autovacuum_vacuum_cost_delay is defined and postgresql_autovacuum_vacuum_cost_delay %}autovacuum_vacuum_cost_delay = {{ postgresql_autovacuum_vacuum_cost_delay }}{% else %}#autovacuum_vacuum_cost_delay = 2ms{% endif %}	# default vacuum cost delay for
					# autovacuum, in milliseconds;
					# -1 means use vacuum_cost_delay
{% if postgresql_autovacuum_vacuum_cost_limit is defined and postgresql_autovacuum_vacuum_cost_limit %}autovacuum_vacuum_cost_limit = {{ postgresql_autovacuum_vacuum_cost_limit }}{% else %}#autovacuum_vacuum_cost_limit = -1{% endif %}	# default vacuum cost limit for
					# autovacuum, -1 means use
					# vacuum_cost_limit


#------------------------------------------------------------------------------
# CLIENT CONNECTION DEFAULTS
#------------------------------------------------------------------------------

# - Statement Behavior -

{% if postgresql_client_min_messages is defined and postgresql_client_min_messages %}client_min_messages = {{ postgresql_client_min_messages }}{% else %}#client_min_messages = notice{% endif %}		# values in order of decreasing detail:
					#   debug5
					#   debug4
					#   debug3
					#   debug2
					#   debug1
					#   log
					#   notice
					#   warning
					#   error
{% if postgresql_search_path is defined and postgresql_search_path %}search_path = '{{ postgresql_search_path | join(', ')}}'{% else %}#search_path = '"$user", public'{% endif %}	# schema names
{% if postgresql_row_security is defined and postgresql_row_security %}row_security = {{ postgresql_row_security }}{% else %}#row_security = on{% endif %}
{% if postgresql_default_table_access_method is defined and postgresql_default_table_access_method %}default_table_access_method = '{{ postgresql_default_table_access_method }}'{% else %}#default_table_access_method = 'heap'{% endif %}
{% if postgresql_default_tablespace is defined and postgresql_default_tablespace %}default_tablespace = '{{ postgresql_default_tablespace }}'{% else %}#default_tablespace = ''{% endif %}		# a tablespace name, '' uses the default
{% if postgresql_default_toast_compression is defined and postgresql_default_toast_compression %}default_toast_compression = '{{ postgresql_default_toast_compression }}'{% else %}#default_toast_compression = 'pglz'{% endif %}	# 'pglz' or 'lz4'
{% if postgresql_temp_tablespaces is defined and postgresql_temp_tablespaces %}temp_tablespaces = '{{ postgresql_temp_tablespaces | join(', ') }}'{% else %}#temp_tablespaces = ''{% endif %}			# a list of tablespace names, '' uses
					# only default tablespace
{% if postgresql_check_function_bodies is defined and postgresql_check_function_bodies %}check_function_bodies = {{ postgresql_check_function_bodies }}{% else %}#check_function_bodies = on{% endif %}
{% if postgresql_default_transaction_isolation is defined and postgresql_default_transaction_isolation %}default_transaction_isolation = '{{ postgresql_default_transaction_isolation }}'{% else %}#default_transaction_isolation = 'read committed'{% endif %}
{% if postgresql_default_transaction_read_only is defined and postgresql_default_transaction_read_only %}default_transaction_read_only = {{ postgresql_default_transaction_read_only }}{% else %}#default_transaction_read_only = off{% endif %}
{% if postgresql_default_transaction_deferrable is defined and postgresql_default_transaction_deferrable %}default_transaction_deferrable = {{ postgresql_default_transaction_deferrable }}{% else %}#default_transaction_deferrable = off{% endif %}
{% if postgresql_session_replication_role is defined and postgresql_session_replication_role %}session_replication_role = '{{ postgresql_session_replication_role }}'{% else %}#session_replication_role = 'origin'{% endif %}
{% if postgresql_statement_timeout is defined and postgresql_statement_timeout %}statement_timeout = {{ postgresql_statement_timeout }}{% else %}#statement_timeout = 0{% endif %}			# in milliseconds, 0 is disabled
{% if postgresql_lock_timeout is defined and postgresql_lock_timeout %}lock_timeout = {{ postgresql_lock_timeout }}{% else %}#lock_timeout = 0{% endif %}			# in milliseconds, 0 is disabled
{% if postgresql_idle_in_transaction_session_timeout is defined and postgresql_idle_in_transaction_session_timeout %}idle_in_transaction_session_timeout = {{ postgresql_idle_in_transaction_session_timeout }}{% else %}#idle_in_transaction_session_timeout = 0{% endif %}	# in milliseconds, 0 is disabled
{% if postgresql_idle_session_timeout is defined and postgresql_idle_session_timeout %}idle_session_timeout = {{ postgresql_idle_session_timeout }}{% else %}#idle_session_timeout = 0{% endif %}		# in milliseconds, 0 is disabled
{% if postgresql_vacuum_freeze_table_age is defined and postgresql_vacuum_freeze_table_age %}vacuum_freeze_table_age = {{ postgresql_vacuum_freeze_table_age }}{% else %}#vacuum_freeze_table_age = 150000000{% endif %}
{% if postgresql_vacuum_freeze_min_age is defined and postgresql_vacuum_freeze_min_age %}vacuum_freeze_min_age = {{ postgresql_vacuum_freeze_min_age }}{% else %}#vacuum_freeze_min_age = 50000000{% endif %}
{% if postgresql_vacuum_failsafe_age is defined and postgresql_vacuum_failsafe_age %}vacuum_failsafe_age = {{ postgresql_vacuum_failsafe_age }}{% else %}#vacuum_failsafe_age = 1600000000{% endif %}
{% if postgresql_vacuum_multixact_freeze_table_age is defined and postgresql_vacuum_multixact_freeze_table_age %}vacuum_multixact_freeze_table_age = {{ postgresql_vacuum_multixact_freeze_table_age }}{% else %}#vacuum_multixact_freeze_table_age = 150000000{% endif %}
{% if postgresql_vacuum_multixact_freeze_min_age is defined and postgresql_vacuum_multixact_freeze_min_age %}vacuum_multixact_freeze_min_age = {{ postgresql_vacuum_multixact_freeze_min_age }}{% else %}#vacuum_multixact_freeze_min_age = 5000000{% endif %}
{% if postgresql_vacuum_multixact_failsafe_age is defined and postgresql_vacuum_multixact_failsafe_age %}vacuum_multixact_failsafe_age = {{ postgresql_vacuum_multixact_failsafe_age }}{% else %}#vacuum_multixact_failsafe_age = 1600000000{% endif %}
{% if postgresql_bytea_output is defined and postgresql_bytea_output %}bytea_output = '{{ postgresql_bytea_output }}'{% else %}#bytea_output = 'hex'{% endif %}			# hex, escape
{% if postgresql_xmlbinary is defined and postgresql_xmlbinary %}xmlbinary = '{{ postgresql_xmlbinary }}'{% else %}#xmlbinary = 'base64'{% endif %}
{% if postgresql_xmloption is defined and postgresql_xmloption %}xmloption = '{{ postgresql_xmloption }}'{% else %}#xmloption = 'content'{% endif %}
{% if postgresql_gin_pending_list_limit is defined and postgresql_gin_pending_list_limit %}gin_pending_list_limit = {{ postgresql_gin_pending_list_limit }}{% else %}#gin_pending_list_limit = 4MB{% endif %}
{% if postgresql_createrole_self_grant is defined and postgresql_createrole_self_grant %}createrole_self_grant = '{{ postgresql_createrole_self_grant }}'{% else %}#createrole_self_grant = ''{% endif %}		# set and/or inherit

# - Locale and Formatting -

{% if postgresql_datestyle is defined and postgresql_datestyle %}datestyle = '{{ postgresql_datestyle | join(', ') }}'{% else %}#datestyle = 'iso, mdy'{% endif %}
{% if postgresql_intervalstyle is defined and postgresql_intervalstyle %}intervalstyle = '{{ postgresql_intervalstyle }}'{% else %}#intervalstyle = 'postgres'{% endif %}
{% if postgresql_timezone is defined and postgresql_timezone %}timezone = '{{ postgresql_timezone }}'{% else %}#timezone = 'GMT'{% endif %}
{% if postgresql_timezone_abbreviations is defined and postgresql_timezone_abbreviations %}timezone_abbreviations = '{{ postgresql_timezone_abbreviations }}'{% else %}#timezone_abbreviations = 'Default'{% endif %}     # Select the set of available time zone
					# abbreviations.  Currently, there are
					#   Default
					#   Australia (historical usage)
					#   India
					# You can create your own file in
					# share/timezonesets/.
{% if postgresql_extra_float_digits is defined and postgresql_extra_float_digits %}extra_float_digits = {{ postgresql_extra_float_digits }}{% else %}#extra_float_digits = 1{% endif %}			# min -15, max 3; any value >0 actually
					# selects precise output mode
{% if postgresql_client_encoding is defined and postgresql_client_encoding %}client_encoding = {{ postgresql_client_encoding }}{% else %}#client_encoding = sql_ascii{% endif %}		# actually, defaults to database
					# encoding

# These settings are initialized by initdb, but they can be changed.
{% if postgresql_lc_messages is defined and postgresql_lc_messages %}lc_messages = '{{ postgresql_lc_messages }}'{% else %}#lc_messages = ''{% endif %}			# locale for system error message
					# strings
{% if postgresql_lc_monetary is defined and postgresql_lc_monetary %}lc_monetary = '{{ postgresql_lc_monetary }}'{% else %}#lc_monetary = 'C'{% endif %}			# locale for monetary formatting
{% if postgresql_lc_numeric is defined and postgresql_lc_numeric %}lc_numeric = '{{ postgresql_lc_numeric }}'{% else %}#lc_numeric = 'C'{% endif %}			# locale for number formatting
{% if postgresql_lc_time is defined and postgresql_lc_time %}lc_time = '{{ postgresql_lc_time }}'{% else %}#lc_time = 'C'{% endif %}				# locale for time formatting

{% if postgresql_icu_validation_level is defined and postgresql_icu_validation_level %}icu_validation_level = {{ postgresql_icu_validation_level }}{% else %}#icu_validation_level = warning{% endif %}		# report ICU locale validation
					# errors at the given level

# default configuration for text search
{% if postgresql_default_text_search_config is defined and postgresql_default_text_search_config %}default_text_search_config = '{{ postgresql_default_text_search_config }}'{% else %}#default_text_search_config = 'pg_catalog.simple'{% endif %}

# - Shared Library Preloading -

{% if postgresql_local_preload_libraries is defined and postgresql_local_preload_libraries %}local_preload_libraries = '{{ postgresql_local_preload_libraries | join(', ') }}'{% else %}#local_preload_libraries = ''{% endif %}
{% if postgresql_session_preload_libraries is defined and postgresql_session_preload_libraries %}session_preload_libraries = '{{ postgresql_session_preload_libraries | join(', ') }}'{% else %}#session_preload_libraries = ''{% endif %}
{% if postgresql_shared_preload_libraries is defined and postgresql_shared_preload_libraries %}shared_preload_libraries = '{{ postgresql_shared_preload_libraries | join(', ') }}'{% else %}#shared_preload_libraries = ''{% endif %}	# (change requires restart)
{% if postgresql_jit_provider is defined and postgresql_jit_provider %}jit_provider = '{{ postgresql_jit_provider }}'{% else %}#jit_provider = 'llvmjit'{% endif %}		# JIT library to use

# - Other Defaults -

{% if postgresql_dynamic_library_path is defined and postgresql_dynamic_library_path %}dynamic_library_path = '{{ postgresql_dynamic_library_path }}'{% else %}#dynamic_library_path = '$libdir'{% endif %}
{% if postgresql_extension_destdir is defined and postgresql_extension_destdir %}extension_destdir = '{{ postgresql_extension_destdir }}'{% else %}#extension_destdir = ''{% endif %}			# prepend path when loading extensions
					# and shared objects (added by Debian)
{% if postgresql_gin_fuzzy_search_limit is defined and postgresql_gin_fuzzy_search_limit %}gin_fuzzy_search_limit = {{ postgresql_gin_fuzzy_search_limit }}{% else %}#gin_fuzzy_search_limit = 0{% endif %}


#------------------------------------------------------------------------------
# LOCK MANAGEMENT
#------------------------------------------------------------------------------

{% if postgresql_deadlock_timeout is defined and postgresql_deadlock_timeout %}deadlock_timeout = {{ postgresql_deadlock_timeout }}{% else %}#deadlock_timeout = 1s{% endif %}
{% if postgresql_max_locks_per_transaction is defined and postgresql_max_locks_per_transaction %}max_locks_per_transaction = {{ postgresql_max_locks_per_transaction }}{% else %}#max_locks_per_transaction = 64{% endif %}		# min 10
					# (change requires restart)
{% if postgresql_max_pred_locks_per_transaction is defined and postgresql_max_pred_locks_per_transaction %}max_pred_locks_per_transaction = {{ postgresql_max_pred_locks_per_transaction }}{% else %}#max_pred_locks_per_transaction = 64{% endif %}	# min 10
					# (change requires restart)
{% if postgresql_max_pred_locks_per_relation is defined and postgresql_max_pred_locks_per_relation %}max_pred_locks_per_relation = {{ postgresql_max_pred_locks_per_relation }}{% else %}#max_pred_locks_per_relation = -2{% endif %}	# negative values mean
					# (max_pred_locks_per_transaction
					#  / -max_pred_locks_per_relation) - 1
{% if postgresql_max_pred_locks_per_page is defined and postgresql_max_pred_locks_per_page %}max_pred_locks_per_page = {{ postgresql_max_pred_locks_per_page }}{% else %}#max_pred_locks_per_page = 2{% endif %}            # min 0


#------------------------------------------------------------------------------
# VERSION AND PLATFORM COMPATIBILITY
#------------------------------------------------------------------------------

# - Previous PostgreSQL Versions -

{% if postgresql_array_nulls is defined and postgresql_array_nulls %}array_nulls = {{ postgresql_array_nulls }}{% else %}#array_nulls = on{% endif %}
{% if postgresql_backslash_quote is defined and postgresql_backslash_quote %}backslash_quote = {{ postgresql_backslash_quote }}{% else %}#backslash_quote = safe_encoding{% endif %}	# on, off, or safe_encoding
{% if postgresql_escape_string_warning is defined and postgresql_escape_string_warning %}escape_string_warning = {{ postgresql_escape_string_warning }}{% else %}#escape_string_warning = on{% endif %}
{% if postgresql_lo_compat_privileges is defined and postgresql_lo_compat_privileges %}lo_compat_privileges = {{ postgresql_lo_compat_privileges }}{% else %}#lo_compat_privileges = off{% endif %}
{% if postgresql_quote_all_identifiers is defined and postgresql_quote_all_identifiers %}quote_all_identifiers = {{ postgresql_quote_all_identifiers }}{% else %}#quote_all_identifiers = off{% endif %}
{% if postgresql_standard_conforming_strings is defined and postgresql_standard_conforming_strings %}standard_conforming_strings = {{ postgresql_standard_conforming_strings }}{% else %}#standard_conforming_strings = on{% endif %}
{% if postgresql_synchronize_seqscans is defined and postgresql_synchronize_seqscans %}synchronize_seqscans = {{ postgresql_synchronize_seqscans }}{% else %}#synchronize_seqscans = on{% endif %}

# - Other Platforms and Clients -

{% if postgresql_transform_null_equals is defined and postgresql_transform_null_equals %}transform_null_equals = {{ postgresql_transform_null_equals }}{% else %}#transform_null_equals = off{% endif %}


#------------------------------------------------------------------------------
# ERROR HANDLING
#------------------------------------------------------------------------------

{% if postgresql_exit_on_error is defined and postgresql_exit_on_error %}exit_on_error = {{ postgresql_exit_on_error }}{% else %}#exit_on_error = off{% endif %}			# terminate session on any error?
{% if postgresql_restart_after_crash is defined and postgresql_restart_after_crash %}restart_after_crash = {{ postgresql_restart_after_crash }}{% else %}#restart_after_crash = on{% endif %}		# reinitialize after backend crash?
{% if postgresql_data_sync_retry is defined and postgresql_data_sync_retry %}data_sync_retry = {{ postgresql_data_sync_retry }}{% else %}#data_sync_retry = off{% endif %}			# retry or panic on failure to fsync
					# data?
					# (change requires restart)
{% if postgresql_recovery_init_sync_method is defined and postgresql_recovery_init_sync_method %}recovery_init_sync_method = {{ postgresql_recovery_init_sync_method }}{% else %}#recovery_init_sync_method = fsync{% endif %}	# fsync, syncfs (Linux 5.8+)


#------------------------------------------------------------------------------
# CONFIG FILE INCLUDES
#------------------------------------------------------------------------------

# These options allow settings to be loaded from files other than the
# default postgresql.conf.  Note that these are directives, not variable
# assignments, so they can usefully be given more than once.

{% if postgresql_include_dir is defined and postgresql_include_dir|length > 0 %}include_dir = '{{ postgresql_include_dir }}'{% else %}#include_dir = '...'{% endif %}			# include files ending in '.conf' from
					# a directory, e.g., 'conf.d'
{% if postgresql_include_if_exists is defined and postgresql_include_if_exists %}include_if_exists = '{{ postgresql_include_if_exists }}'{% else %}#include_if_exists = '...'{% endif %}		# include file only if it exists
{% if postgresql_include is defined and postgresql_include %}include = '{{ postgresql_include }}'{% else %}#include = '...'{% endif %}			# include file


#------------------------------------------------------------------------------
# CUSTOMIZED OPTIONS
#------------------------------------------------------------------------------

# Add settings for extensions here
